# Create Next.js app
npx create-next-app@latest kavya-clothes
cd kavya-clothes

# Install Tailwind CSS
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p

# Install Stripe
npm install @stripe/stripe-js
npm install stripe/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./pages/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  theme: { extend: {} },
  plugins: [],
}@tailwind base;
@tailwind components;
@tailwind utilities;kavya-clothes/
├─ pages/
│  ├─ index.js
│  ├─ products.js
│  ├─ product/[id].js
│  ├─ about.js
│  ├─ contact.js
│  ├─ cart.js
│  ├─ checkout.js
│  ├─ success.js
│  └─ api/checkout_sessions.js
├─ components/
│  ├─ Header.js
│  ├─ Footer.js
│  ├─ Hero.js
│  ├─ ProductCard.js
│  └─ CheckoutButton.js
├─ public/images/
│  ├─ banner.jpg
│  ├─ product1.jpg
│  └─ product2.jpgimport Link from "next/link";

export default function Header() {
  return (
    <header className="bg-white shadow-md p-4 flex justify-between items-center">
      <h1 className="text-xl font-bold">Kavya Clothes</h1>
      <nav className="space-x-4">
        <Link href="/">Home</Link>
        <Link href="/products">Products</Link>
        <Link href="/about">About</Link>
        <Link href="/contact">Contact</Link>
        <Link href="/cart">Cart</Link>
      </nav>
    </header>
  );export default function Footer() {
  return (
    <footer className="bg-gray-100 text-center p-4 mt-8">
      © 2025 Kavya Clothes. All Rights Reserved.
    </footer>
  );
}
}export default function Hero() {
  return (
    <div className="bg-gray-100 py-20 text-center">
      <h2 className="text-4xl font-bold mb-4">Latest Collection</h2>
      <p className="mb-6">Trendy clothes for everyone</p>
      <button className="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600">
        Shop Now
      </button>
    </div>
  );
}import Link from "next/link";

export default function ProductCard({ product }) {
  return (
    <div className="border p-4 rounded shadow hover:shadow-lg transition">
      <img
        src={product.image}
        alt={product.name}
        className="w-full h-48 object-cover mb-2"
      />
      <h3 className="font-bold">{product.name}</h3>
      <p className="text-gray-700">${product.price}</p>
      <Link href={`/product/${product.id}`} className="text-blue-500 mt-2 inline-block">
        View
      </Link>
    </div>
  );
}import { loadStripe } from "@stripe/stripe-js";
const stripePromise = loadStripe("YOUR_PUBLISHABLE_KEY");

export default function CheckoutButton({ amount }) {
  const handleClick = async () => {
    const stripe = await stripePromise;
    const response = await fetch("/api/checkout_sessions", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ amount }),
    });
    const session = await response.json();
    await stripe.redirectToCheckout({ sessionId: session.id });
  };

  return (
    <button
      className="bg-green-500 text-white px-6 py-2 rounded hover:bg-green-600"
      onClick={handleClick}
    >
      Pay Online
    </button>
  );
}import '../styles/globals.css'

export default function App({ Component, pageProps }) {
  return <Component {...pageProps} />
}import Header from "../components/Header";
import Footer from "../components/Footer";
import Hero from "../components/Hero";
import ProductCard from "../components/ProductCard";

const products = [
  { id: 1, name: "Stylish Shirt", price: 25, image: "/images/product1.jpg" },
  { id: 2, name: "Elegant Dress", price: 40, image: "/images/product2.jpg" },
];

export default function Home() {
  return (
    <div>
      <Header />
      <Hero />
      <section className="p-8">
        <h2 className="text-2xl font-bold mb-6">Featured Products</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {products.map((product) => (
            <ProductCard key={product.id} product={product} />
          ))}
        </div>
      </section>
      <Footer />
    </div>
  );
}import Header from "../components/Header";
import Footer from "../components/Footer";
import ProductCard from "../components/ProductCard";

const products = [
  { id: 1, name: "Stylish Shirt", price: 25, image: "/images/product1.jpg" },
  { id: 2, name: "Elegant Dress", price: 40, image: "/images/product2.jpg" },
  { id: 3, name: "Casual Jacket", price: 55, image: "/images/product1.jpg" },
  { id: 4, name: "Summer Skirt", price: 30, image: "/images/product2.jpg" },
];

export default function Products() {
  return (
    <div>
      <Header />
      <section className="p-8">
        <h2 className="text-2xl font-bold mb-6">All Products</h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {products.map((product) => (
            <ProductCard key={product.id} product={product} />
          ))}
        </div>
      </section>
      <Footer />
    </div>
  );
}import { useRouter } from "next/router";
import Header from "../../components/Header";
import Footer from "../../components/Footer";

const products = [
  { id: 1, name: "Stylish Shirt", price: 25, image: "/images/product1.jpg", description: "Comfortable and trendy shirt." },
  { id: 2, name: "Elegant Dress", price: 40, image: "/images/product2.jpg", description: "Perfect for parties and outings." },
];

export default function ProductDetail() {
  const router = useRouter();
  const { id } = router.query;
  const product = products.find((p) => p.id === parseInt(id));

  if (!product) return <p>Product not found</p>;

  return (
    <div>
      <Header />
      <section className="p-8 flex flex-col md:flex-row gap-8">
        <img src={product.image} alt={product.name} className="w-full md:w-1/2 h-auto object-cover rounded" />
        <div>
          <h2 className="text-3xl font-bold mb-4">{product.name}</h2>
          <p className="text-gray-700 mb-4">{product.description}</p>
          <p className="text-xl font-semibold mb-4">${product.price}</p>
          <button className="bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600">Add to Cart</button>
        </div>
      </section>
      <Footer />
    </div>
  );
}import Header from "../components/Header";
import Footer from "../components/Footer";
import { useState } from "react";

export default function Cart() {
  const [cartItems, setCartItems] = useState([
    { id: 1, name: "Stylish Shirt", price: 25, quantity: 2 },
    { id: 2, name: "Elegant Dress", price: 40, quantity: 1 },
  ]);

  const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);

  return (
    <div>
      <Header />
      <section className="p-8 max-w-2xl mx-auto">
        <h2 className="text-2xl font-bold mb-6">Your Cart</h2>
        {cartItems.map((item) => (
          <div key={item.id} className="flex justify-between border-b py-2">
            <p>{item.name} x {item.quantity}</p>
            <p>${item.price * item.quantity}</p>
          </div>
        ))}
        <div className="flex justify-between mt-4 font-bold">
          <p>Total:</p>
          <p>${total}</p>
        </div>
        <a href="/checkout" className="mt-6 inline-block bg-green-500 text-white px-6 py-2 rounded hover:bg-green-600">
          Proceed to Checkout
        </a>
      </section>
      <Footer />
    </div>
  );
}import Header from "../components/Header";
import Footer from "../components/Footer";
import CheckoutButton from "../components/CheckoutButton";
import { useState } from "react";

export default function Checkout() {
  const [form, setForm] = useState({ name: "", address: "", city: "", zip: "", phone: "" });
  const total = 100; // Example total, replace with cart total

  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });

  return (
    <div>
      <Header />
      <section className="p-8 max-w-lg mx-auto">
        <h2 className="text-2xl font-bold mb-6">Checkout</h2>
        <form className="flex flex-col gap-4">
          <input type="text" name="name" placeholder="Full Name" value={form.name} onChange={handleChange} required />
          <input type="text" name="address" placeholder="Address" value={form.address} onChange={handleChange} required />
          <input type="text" name="city" placeholder="City" value={form.city} onChange={handleChange} required />
          <input type="text" name="zip" placeholder="Zip Code" value={form.zip} onChange={handleChange} required />
          <input type="tel" name="phone" placeholder="Phone Number" value={form.phone} onChange={handleChange} required />
        </form>
        <CheckoutButton amount={total} />
      </section>
      <Footer />
    </div>
  );
}import Stripe from "stripe";
const stripe = new Stripe("YOUR_SECRET_KEY");

export default async function handler(req, res) {
  if (req.method === "POST") {
    const { amount } = req.body;
    const session = await stripe.checkout.sessions.create({
      payment_method_types: ["card"],
      line_items: [
        { 
          price_data: { 
            currency: "usd", 
            product_data: { name: "Order" }, 
            unit_amount: amount * 100 
          }, 
          quantity: 1 
        }
      ],
      mode: "payment",
      success_url: `${req.headers.origin}/success`,
      cancel_url: `${req.headers.origin}/cart`,
    });
    res.status(200).json({ id: session.id });
  } else {
    res.setHeader("Allow", "POST");
    res.status(405).end("Method Not Allowed");
  }import Header from "../components/Header";
import Footer from "../components/Footer";

export default function Success() {
  return (
    <div>
      <Header />
      <section className="p-8 text-center">
        <h2 className="text-3xl font-bold mb-4">Payment Successful!</h2>
        <p>Thank you for your order. Your delivery will arrive soon.</p>
      </section>
      <Footer />
    </div>
  );
}
}
└─ styles/globals.css
